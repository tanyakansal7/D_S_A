//https://leetcode.com/problems/letter-combinations-of-a-phone-number/submissions/

class Solution {
public:
    void solve(string digit,string output,int ind,vector<string>&ans,string mapping[]){
        if(ind>=digit.length()){
            ans.push_back(output);
            return;
        }
        int number =digit[ind]-'0';
        string value=mapping[number];
        for(int i=0;i<value.length();i++){
            output.push_back(value[i]);
            solve(digit,output,ind+1,ans,mapping);
            output.pop_back();

        }
    }
    vector<string> letterCombinations(string digits) {
        vector<string>ans;
        if(digits.length()==0) return ans;
        string output="";
        int ind=0;
        string mapping[10]={"","","abc","def","ghi","jkl","mno","pqrs","tuv","wxyz"};
        solve(digits,output,ind,ans,mapping);
        return ans;
    }
};